package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"
	domain "posts_commets_service/internal/domain/models"
	"posts_commets_service/internal/models"
	"time"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input models.InputUser) (*domain.User, error) {
	return r.UserUC.Create(ctx, input.Name)
}

// GetUser is the resolver for the getUser field.
func (r *queryResolver) GetUser(ctx context.Context, id int) (*domain.User, error) {
	return r.UserUC.GetByID(ctx, domain.UserID(id))
}

// ID is the resolver for the id field.
func (r *userResolver) ID(ctx context.Context, obj *domain.User) (int, error) {
	return int(obj.ID), nil
}

// CreatedAt is the resolver for the createdAt field.
func (r *userResolver) CreatedAt(ctx context.Context, obj *domain.User) (*time.Time, error) {
	return nil, nil
}

// User returns UserResolver implementation.
func (r *Resolver) User() UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
